@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Display Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		Staging.openStagingAdmin(siteURLKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test AssertDisplayPagesAreOnlyEditableInStagingView {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

		AssertVisible(
			key_navItem = "Display Pages",
			locator1 = "NavBar#NAV_ITEM_LINK");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		AssertElementNotPresent(
			key_navItem = "Display Pages",
			locator1 = "NavBar#NAV_ITEM_LINK");
	}

	@description = "This tests one of the workarounds of LPS-92522."
	@priority = "5"
	test PublishDisplayPageWithFragment {
		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name-staging");

		FragmentsAdmin.importCollectionFromDependenciesFolder(collectionZipFile = "fragment-collection.zip");

		DisplayPagesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name-staging");

		DisplayPagesAdmin.add(displayPageName = "Display Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PortletEntry.publish();

		Staging.openStagingAdmin(siteURLKey = "test-site-name-staging");

		Staging.publishCustomPublication();

		AssertConsoleTextNotPresent(value1 = "PortletDataException");
	}

}