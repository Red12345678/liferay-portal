@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Permissions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Page.tearDownPG();
		}
	}

	@priority = "5"
	test ViewBlogsPortletAsGuestPG {
		property app.server.types = "jboss,resin,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "false";

		Page.add(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.viewControlsPG();

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();
	}

}